apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  selector:
    app: zookeeper
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.3.2
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_SERVER_ID
              value: "1"
            - name: ZOOKEEPER_SERVERS
              value: zookeeper:2888:3888

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      imagePullSecrets:
        - name: registry-secret
      initContainers:
        - name: wait-for-dependencies
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nc -z zookeeper 2181; do echo waiting for dependencies; sleep 2; done;",
            ]
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.3.2
          ports:
            - containerPort: 9092
            - containerPort: 29092
            - containerPort: 9999
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_LOG4J_LOGGERS
              value: kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_JMX_PORT
              value: "9999"
            - name: KAFKA_JMX_HOSTNAME
              value: "${DOCKER_HOST_IP:-127.0.0.1}"
            - name: KAFKA_AUTHORIZER_CLASS_NAME
              value: kafka.security.authorizer.AclAuthorizer
            - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
              value: "true"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"

---

apiVersion: v1
kind: Service
metadata:
  name: apache-kafka-service
spec:
  selector:
    app: kafka
  ports:
    - name: kafka-port-1
      protocol: TCP
      port: 9092
      targetPort: 9092
    - name: kafka-port-2
      protocol: TCP
      port: 29092
      targetPort: 29092
    - name: kafka-port-3
      protocol: TCP
      port: 9999
      targetPort: 9999